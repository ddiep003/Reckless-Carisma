
CS120BFinal2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000003d8  0000046c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800104  00800104  00000470  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000470  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  000004e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d36  00000000  00000000  00000670  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b3c  00000000  00000000  000023a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d5d  00000000  00000000  00002ee2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000470  00000000  00000000  00003c40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000739  00000000  00000000  000040b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f61  00000000  00000000  000047e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  0000574a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	a8 c1       	rjmp	.+848    	; 0x356 <__vector_1>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	49 c0       	rjmp	.+146    	; 0xc8 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ed       	ldi	r30, 0xD8	; 216
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 30       	cpi	r26, 0x0C	; 12
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	69 d1       	rcall	.+722    	; 0x396 <main>
  c4:	87 c1       	rjmp	.+782    	; 0x3d4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_13>:
	}
	
	USART_Transmit('#');	//visar att chipet mottagit datan...
	

  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	8f 93       	push	r24
  d4:	9f 93       	push	r25
  d6:	af 93       	push	r26
  d8:	bf 93       	push	r27
  da:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <_avr_timer_cntcurr>
  de:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <_avr_timer_cntcurr+0x1>
  e2:	a0 91 09 01 	lds	r26, 0x0109	; 0x800109 <_avr_timer_cntcurr+0x2>
  e6:	b0 91 0a 01 	lds	r27, 0x010A	; 0x80010a <_avr_timer_cntcurr+0x3>
  ea:	01 97       	sbiw	r24, 0x01	; 1
  ec:	a1 09       	sbc	r26, r1
  ee:	b1 09       	sbc	r27, r1
  f0:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <_avr_timer_cntcurr>
  f4:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <_avr_timer_cntcurr+0x1>
  f8:	a0 93 09 01 	sts	0x0109, r26	; 0x800109 <_avr_timer_cntcurr+0x2>
  fc:	b0 93 0a 01 	sts	0x010A, r27	; 0x80010a <_avr_timer_cntcurr+0x3>
 100:	89 2b       	or	r24, r25
 102:	8a 2b       	or	r24, r26
 104:	8b 2b       	or	r24, r27
 106:	99 f4       	brne	.+38     	; 0x12e <__vector_13+0x66>
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <TimerFlag>
 10e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 112:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 116:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 11a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 11e:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <_avr_timer_cntcurr>
 122:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <_avr_timer_cntcurr+0x1>
 126:	a0 93 09 01 	sts	0x0109, r26	; 0x800109 <_avr_timer_cntcurr+0x2>
 12a:	b0 93 0a 01 	sts	0x010A, r27	; 0x80010a <_avr_timer_cntcurr+0x3>
 12e:	bf 91       	pop	r27
 130:	af 91       	pop	r26
 132:	9f 91       	pop	r25
 134:	8f 91       	pop	r24
 136:	0f 90       	pop	r0
 138:	0f be       	out	0x3f, r0	; 63
 13a:	0f 90       	pop	r0
 13c:	1f 90       	pop	r1
 13e:	18 95       	reti

00000140 <clockprescale>:
 140:	e1 e6       	ldi	r30, 0x61	; 97
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	80 e8       	ldi	r24, 0x80	; 128
 146:	80 83       	st	Z, r24
 148:	10 82       	st	Z, r1
 14a:	08 95       	ret

0000014c <usart_init>:
 14c:	51 9a       	sbi	0x0a, 1	; 10
 14e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 152:	83 e3       	ldi	r24, 0x33	; 51
 154:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 158:	88 e1       	ldi	r24, 0x18	; 24
 15a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 15e:	8e e0       	ldi	r24, 0x0E	; 14
 160:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 164:	08 95       	ret

00000166 <InitSPI>:
 166:	84 b1       	in	r24, 0x04	; 4
 168:	8e 62       	ori	r24, 0x2E	; 46
 16a:	84 b9       	out	0x04, r24	; 4
 16c:	8c b5       	in	r24, 0x2c	; 44
 16e:	80 65       	ori	r24, 0x50	; 80
 170:	8c bd       	out	0x2c, r24	; 44
 172:	2a 9a       	sbi	0x05, 2	; 5
 174:	85 b1       	in	r24, 0x05	; 5
 176:	15 b8       	out	0x05, r1	; 5
 178:	08 95       	ret

0000017a <WriteByteSPI>:
 17a:	8e bd       	out	0x2e, r24	; 46
 17c:	0d b4       	in	r0, 0x2d	; 45
 17e:	07 fe       	sbrs	r0, 7
 180:	fd cf       	rjmp	.-6      	; 0x17c <WriteByteSPI+0x2>
 182:	8e b5       	in	r24, 0x2e	; 46
 184:	08 95       	ret

00000186 <ioinit>:
 186:	20 9a       	sbi	0x04, 0	; 4
 188:	08 95       	ret

0000018a <INT0_interrupt_init>:
 18a:	52 98       	cbi	0x0a, 2	; 10
 18c:	e9 e6       	ldi	r30, 0x69	; 105
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	82 60       	ori	r24, 0x02	; 2
 194:	80 83       	st	Z, r24
 196:	80 81       	ld	r24, Z
 198:	8e 7f       	andi	r24, 0xFE	; 254
 19a:	80 83       	st	Z, r24
 19c:	e8 9a       	sbi	0x1d, 0	; 29
 19e:	08 95       	ret

000001a0 <USART_interrupt_init>:
 1a0:	e1 ec       	ldi	r30, 0xC1	; 193
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	80 81       	ld	r24, Z
 1a6:	80 68       	ori	r24, 0x80	; 128
 1a8:	80 83       	st	Z, r24
 1aa:	08 95       	ret

000001ac <WriteToNrf>:
 1ac:	cf 92       	push	r12
 1ae:	df 92       	push	r13
 1b0:	ef 92       	push	r14
 1b2:	ff 92       	push	r15
 1b4:	0f 93       	push	r16
 1b6:	1f 93       	push	r17
 1b8:	cf 93       	push	r28
 1ba:	df 93       	push	r29
 1bc:	f8 2e       	mov	r15, r24
 1be:	e6 2e       	mov	r14, r22
 1c0:	6a 01       	movw	r12, r20
 1c2:	02 2f       	mov	r16, r18
 1c4:	f8 94       	cli
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	f8 12       	cpse	r15, r24
 1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <WriteToNrf+0x24>
 1cc:	80 e2       	ldi	r24, 0x20	; 32
 1ce:	e8 0e       	add	r14, r24
 1d0:	85 e3       	ldi	r24, 0x35	; 53
 1d2:	8a 95       	dec	r24
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <WriteToNrf+0x26>
 1d6:	00 00       	nop
 1d8:	85 b1       	in	r24, 0x05	; 5
 1da:	15 b8       	out	0x05, r1	; 5
 1dc:	85 e3       	ldi	r24, 0x35	; 53
 1de:	8a 95       	dec	r24
 1e0:	f1 f7       	brne	.-4      	; 0x1de <WriteToNrf+0x32>
 1e2:	00 00       	nop
 1e4:	8e 2d       	mov	r24, r14
 1e6:	c9 df       	rcall	.-110    	; 0x17a <WriteByteSPI>
 1e8:	85 e3       	ldi	r24, 0x35	; 53
 1ea:	8a 95       	dec	r24
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <WriteToNrf+0x3e>
 1ee:	00 00       	nop
 1f0:	10 e0       	ldi	r17, 0x00	; 0
 1f2:	10 16       	cp	r1, r16
 1f4:	11 06       	cpc	r1, r17
 1f6:	fc f4       	brge	.+62     	; 0x236 <WriteToNrf+0x8a>
 1f8:	c0 e0       	ldi	r28, 0x00	; 0
 1fa:	d0 e0       	ldi	r29, 0x00	; 0
 1fc:	f1 10       	cpse	r15, r1
 1fe:	0e c0       	rjmp	.+28     	; 0x21c <WriteToNrf+0x70>
 200:	80 ea       	ldi	r24, 0xA0	; 160
 202:	e8 16       	cp	r14, r24
 204:	59 f0       	breq	.+22     	; 0x21c <WriteToNrf+0x70>
 206:	8f ef       	ldi	r24, 0xFF	; 255
 208:	b8 df       	rcall	.-144    	; 0x17a <WriteByteSPI>
 20a:	fe 01       	movw	r30, r28
 20c:	ec 5f       	subi	r30, 0xFC	; 252
 20e:	fe 4f       	sbci	r31, 0xFE	; 254
 210:	80 83       	st	Z, r24
 212:	85 e3       	ldi	r24, 0x35	; 53
 214:	8a 95       	dec	r24
 216:	f1 f7       	brne	.-4      	; 0x214 <WriteToNrf+0x68>
 218:	00 00       	nop
 21a:	09 c0       	rjmp	.+18     	; 0x22e <WriteToNrf+0x82>
 21c:	f6 01       	movw	r30, r12
 21e:	ec 0f       	add	r30, r28
 220:	fd 1f       	adc	r31, r29
 222:	80 81       	ld	r24, Z
 224:	aa df       	rcall	.-172    	; 0x17a <WriteByteSPI>
 226:	85 e3       	ldi	r24, 0x35	; 53
 228:	8a 95       	dec	r24
 22a:	f1 f7       	brne	.-4      	; 0x228 <WriteToNrf+0x7c>
 22c:	00 00       	nop
 22e:	21 96       	adiw	r28, 0x01	; 1
 230:	c0 17       	cp	r28, r16
 232:	d1 07       	cpc	r29, r17
 234:	19 f7       	brne	.-58     	; 0x1fc <WriteToNrf+0x50>
 236:	2a 9a       	sbi	0x05, 2	; 5
 238:	78 94       	sei
 23a:	84 e0       	ldi	r24, 0x04	; 4
 23c:	91 e0       	ldi	r25, 0x01	; 1
 23e:	df 91       	pop	r29
 240:	cf 91       	pop	r28
 242:	1f 91       	pop	r17
 244:	0f 91       	pop	r16
 246:	ff 90       	pop	r15
 248:	ef 90       	pop	r14
 24a:	df 90       	pop	r13
 24c:	cf 90       	pop	r12
 24e:	08 95       	ret

00000250 <nrf24L01_init>:
 250:	0f 93       	push	r16
 252:	1f 93       	push	r17
 254:	cf 93       	push	r28
 256:	df 93       	push	r29
 258:	00 d0       	rcall	.+0      	; 0x25a <nrf24L01_init+0xa>
 25a:	00 d0       	rcall	.+0      	; 0x25c <nrf24L01_init+0xc>
 25c:	1f 92       	push	r1
 25e:	cd b7       	in	r28, 0x3d	; 61
 260:	de b7       	in	r29, 0x3e	; 62
 262:	2f ef       	ldi	r18, 0xFF	; 255
 264:	81 ee       	ldi	r24, 0xE1	; 225
 266:	94 e0       	ldi	r25, 0x04	; 4
 268:	21 50       	subi	r18, 0x01	; 1
 26a:	80 40       	sbci	r24, 0x00	; 0
 26c:	90 40       	sbci	r25, 0x00	; 0
 26e:	e1 f7       	brne	.-8      	; 0x268 <nrf24L01_init+0x18>
 270:	00 c0       	rjmp	.+0      	; 0x272 <nrf24L01_init+0x22>
 272:	00 00       	nop
 274:	11 e0       	ldi	r17, 0x01	; 1
 276:	19 83       	std	Y+1, r17	; 0x01
 278:	21 e0       	ldi	r18, 0x01	; 1
 27a:	ae 01       	movw	r20, r28
 27c:	4f 5f       	subi	r20, 0xFF	; 255
 27e:	5f 4f       	sbci	r21, 0xFF	; 255
 280:	61 e0       	ldi	r22, 0x01	; 1
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	93 df       	rcall	.-218    	; 0x1ac <WriteToNrf>
 286:	8f e2       	ldi	r24, 0x2F	; 47
 288:	89 83       	std	Y+1, r24	; 0x01
 28a:	21 e0       	ldi	r18, 0x01	; 1
 28c:	ae 01       	movw	r20, r28
 28e:	4f 5f       	subi	r20, 0xFF	; 255
 290:	5f 4f       	sbci	r21, 0xFF	; 255
 292:	64 e0       	ldi	r22, 0x04	; 4
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	8a df       	rcall	.-236    	; 0x1ac <WriteToNrf>
 298:	19 83       	std	Y+1, r17	; 0x01
 29a:	21 e0       	ldi	r18, 0x01	; 1
 29c:	ae 01       	movw	r20, r28
 29e:	4f 5f       	subi	r20, 0xFF	; 255
 2a0:	5f 4f       	sbci	r21, 0xFF	; 255
 2a2:	62 e0       	ldi	r22, 0x02	; 2
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	82 df       	rcall	.-252    	; 0x1ac <WriteToNrf>
 2a8:	03 e0       	ldi	r16, 0x03	; 3
 2aa:	09 83       	std	Y+1, r16	; 0x01
 2ac:	21 e0       	ldi	r18, 0x01	; 1
 2ae:	ae 01       	movw	r20, r28
 2b0:	4f 5f       	subi	r20, 0xFF	; 255
 2b2:	5f 4f       	sbci	r21, 0xFF	; 255
 2b4:	63 e0       	ldi	r22, 0x03	; 3
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	79 df       	rcall	.-270    	; 0x1ac <WriteToNrf>
 2ba:	19 83       	std	Y+1, r17	; 0x01
 2bc:	21 e0       	ldi	r18, 0x01	; 1
 2be:	ae 01       	movw	r20, r28
 2c0:	4f 5f       	subi	r20, 0xFF	; 255
 2c2:	5f 4f       	sbci	r21, 0xFF	; 255
 2c4:	65 e0       	ldi	r22, 0x05	; 5
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	71 df       	rcall	.-286    	; 0x1ac <WriteToNrf>
 2ca:	87 e0       	ldi	r24, 0x07	; 7
 2cc:	89 83       	std	Y+1, r24	; 0x01
 2ce:	21 e0       	ldi	r18, 0x01	; 1
 2d0:	ae 01       	movw	r20, r28
 2d2:	4f 5f       	subi	r20, 0xFF	; 255
 2d4:	5f 4f       	sbci	r21, 0xFF	; 255
 2d6:	66 e0       	ldi	r22, 0x06	; 6
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	68 df       	rcall	.-304    	; 0x1ac <WriteToNrf>
 2dc:	12 e1       	ldi	r17, 0x12	; 18
 2de:	19 83       	std	Y+1, r17	; 0x01
 2e0:	1a 83       	std	Y+2, r17	; 0x02
 2e2:	1b 83       	std	Y+3, r17	; 0x03
 2e4:	1c 83       	std	Y+4, r17	; 0x04
 2e6:	1d 83       	std	Y+5, r17	; 0x05
 2e8:	25 e0       	ldi	r18, 0x05	; 5
 2ea:	ae 01       	movw	r20, r28
 2ec:	4f 5f       	subi	r20, 0xFF	; 255
 2ee:	5f 4f       	sbci	r21, 0xFF	; 255
 2f0:	6a e0       	ldi	r22, 0x0A	; 10
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	5b df       	rcall	.-330    	; 0x1ac <WriteToNrf>
 2f6:	19 83       	std	Y+1, r17	; 0x01
 2f8:	1a 83       	std	Y+2, r17	; 0x02
 2fa:	1b 83       	std	Y+3, r17	; 0x03
 2fc:	1c 83       	std	Y+4, r17	; 0x04
 2fe:	1d 83       	std	Y+5, r17	; 0x05
 300:	25 e0       	ldi	r18, 0x05	; 5
 302:	ae 01       	movw	r20, r28
 304:	4f 5f       	subi	r20, 0xFF	; 255
 306:	5f 4f       	sbci	r21, 0xFF	; 255
 308:	60 e1       	ldi	r22, 0x10	; 16
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	4f df       	rcall	.-354    	; 0x1ac <WriteToNrf>
 30e:	09 83       	std	Y+1, r16	; 0x01
 310:	21 e0       	ldi	r18, 0x01	; 1
 312:	ae 01       	movw	r20, r28
 314:	4f 5f       	subi	r20, 0xFF	; 255
 316:	5f 4f       	sbci	r21, 0xFF	; 255
 318:	61 e1       	ldi	r22, 0x11	; 17
 31a:	81 e0       	ldi	r24, 0x01	; 1
 31c:	47 df       	rcall	.-370    	; 0x1ac <WriteToNrf>
 31e:	8e e1       	ldi	r24, 0x1E	; 30
 320:	89 83       	std	Y+1, r24	; 0x01
 322:	21 e0       	ldi	r18, 0x01	; 1
 324:	ae 01       	movw	r20, r28
 326:	4f 5f       	subi	r20, 0xFF	; 255
 328:	5f 4f       	sbci	r21, 0xFF	; 255
 32a:	60 e0       	ldi	r22, 0x00	; 0
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	3e df       	rcall	.-388    	; 0x1ac <WriteToNrf>
 330:	2f ef       	ldi	r18, 0xFF	; 255
 332:	81 ee       	ldi	r24, 0xE1	; 225
 334:	94 e0       	ldi	r25, 0x04	; 4
 336:	21 50       	subi	r18, 0x01	; 1
 338:	80 40       	sbci	r24, 0x00	; 0
 33a:	90 40       	sbci	r25, 0x00	; 0
 33c:	e1 f7       	brne	.-8      	; 0x336 <nrf24L01_init+0xe6>
 33e:	00 c0       	rjmp	.+0      	; 0x340 <nrf24L01_init+0xf0>
 340:	00 00       	nop
 342:	0f 90       	pop	r0
 344:	0f 90       	pop	r0
 346:	0f 90       	pop	r0
 348:	0f 90       	pop	r0
 34a:	0f 90       	pop	r0
 34c:	df 91       	pop	r29
 34e:	cf 91       	pop	r28
 350:	1f 91       	pop	r17
 352:	0f 91       	pop	r16
 354:	08 95       	ret

00000356 <__vector_1>:
 356:	1f 92       	push	r1
 358:	0f 92       	push	r0
 35a:	0f b6       	in	r0, 0x3f	; 63
 35c:	0f 92       	push	r0
 35e:	11 24       	eor	r1, r1
 360:	2f 93       	push	r18
 362:	8f 93       	push	r24
 364:	9f 93       	push	r25
 366:	f8 94       	cli
 368:	85 b1       	in	r24, 0x05	; 5
 36a:	15 b8       	out	0x05, r1	; 5
 36c:	28 9a       	sbi	0x05, 0	; 5
 36e:	2f ef       	ldi	r18, 0xFF	; 255
 370:	89 e6       	ldi	r24, 0x69	; 105
 372:	98 e1       	ldi	r25, 0x18	; 24
 374:	21 50       	subi	r18, 0x01	; 1
 376:	80 40       	sbci	r24, 0x00	; 0
 378:	90 40       	sbci	r25, 0x00	; 0
 37a:	e1 f7       	brne	.-8      	; 0x374 <__vector_1+0x1e>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <__vector_1+0x28>
 37e:	00 00       	nop
 380:	85 b1       	in	r24, 0x05	; 5
 382:	15 b8       	out	0x05, r1	; 5
 384:	78 94       	sei
 386:	9f 91       	pop	r25
 388:	8f 91       	pop	r24
 38a:	2f 91       	pop	r18
 38c:	0f 90       	pop	r0
 38e:	0f be       	out	0x3f, r0	; 63
 390:	0f 90       	pop	r0
 392:	1f 90       	pop	r1
 394:	18 95       	reti

00000396 <main>:
#include "nRF2401_Transmitter.c"

int main(void)
{
    /* Replace with your application code */
	DDRA = 0x00; PORTA = 0xFF;
 396:	11 b8       	out	0x01, r1	; 1
 398:	8f ef       	ldi	r24, 0xFF	; 255
 39a:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xBF; PORTB = 0x40;
 39c:	9f eb       	ldi	r25, 0xBF	; 191
 39e:	94 b9       	out	0x04, r25	; 4
 3a0:	90 e4       	ldi	r25, 0x40	; 64
 3a2:	95 b9       	out	0x05, r25	; 5
	DDRC = 0xFF; PORTC = 0x00; // LCD data lines
 3a4:	87 b9       	out	0x07, r24	; 7
 3a6:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00; // LCD control lines
 3a8:	8a b9       	out	0x0a, r24	; 10
 3aa:	1b b8       	out	0x0b, r1	; 11
	clockprescale();
 3ac:	c9 de       	rcall	.-622    	; 0x140 <clockprescale>
	usart_init();
 3ae:	ce de       	rcall	.-612    	; 0x14c <usart_init>
	InitSPI();
 3b0:	da de       	rcall	.-588    	; 0x166 <InitSPI>
	ioinit();
 3b2:	e9 de       	rcall	.-558    	; 0x186 <ioinit>
	INT0_interrupt_init();
 3b4:	ea de       	rcall	.-556    	; 0x18a <INT0_interrupt_init>
	USART_interrupt_init();
 3b6:	f4 de       	rcall	.-536    	; 0x1a0 <USART_interrupt_init>
	nrf24L01_init();
 3b8:	4b df       	rcall	.-362    	; 0x250 <nrf24L01_init>

	SETBIT(PORTB,0);		// In order to ensure that the diode works!
 3ba:	28 9a       	sbi	0x05, 0	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3bc:	2f ef       	ldi	r18, 0xFF	; 255
 3be:	83 ed       	ldi	r24, 0xD3	; 211
 3c0:	90 e3       	ldi	r25, 0x30	; 48
 3c2:	21 50       	subi	r18, 0x01	; 1
 3c4:	80 40       	sbci	r24, 0x00	; 0
 3c6:	90 40       	sbci	r25, 0x00	; 0
 3c8:	e1 f7       	brne	.-8      	; 0x3c2 <main+0x2c>
 3ca:	00 c0       	rjmp	.+0      	; 0x3cc <main+0x36>
 3cc:	00 00       	nop
	_delay_ms(1000);
	CLEARBIT(PORTB,0);
 3ce:	85 b1       	in	r24, 0x05	; 5
 3d0:	15 b8       	out	0x05, r1	; 5
    while (1) 
    {
		
    }
 3d2:	ff cf       	rjmp	.-2      	; 0x3d2 <main+0x3c>

000003d4 <_exit>:
 3d4:	f8 94       	cli

000003d6 <__stop_program>:
 3d6:	ff cf       	rjmp	.-2      	; 0x3d6 <__stop_program>
