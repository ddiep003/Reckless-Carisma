
CS120B Final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000003c8  0000045c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003c8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800104  00800104  00000460  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000460  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000490  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  000004d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012cb  00000000  00000000  000005e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ad9  00000000  00000000  000018ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000865  00000000  00000000  00002384  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000029c  00000000  00000000  00002bec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e5  00000000  00000000  00002e88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000906  00000000  00000000  0000346d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  00003d73  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	c0 c0       	rjmp	.+384    	; 0x1b6 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ec       	ldi	r30, 0xC8	; 200
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a9 30       	cpi	r26, 0x09	; 9
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	ff d0       	rcall	.+510    	; 0x2c2 <main>
  c4:	7f c1       	rjmp	.+766    	; 0x3c4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <delay_ms>:
	LCD_DisplayString(1, itoa(x,a,10));
	LCD_DisplayString(17, itoa(y,b,10));
}

void MotorControl()
{
  c8:	18 16       	cp	r1, r24
  ca:	19 06       	cpc	r1, r25
  cc:	5c f0       	brlt	.+22     	; 0xe4 <delay_ms+0x1c>
  ce:	08 95       	ret
  d0:	00 00       	nop
  d2:	21 50       	subi	r18, 0x01	; 1
  d4:	31 09       	sbc	r19, r1
  d6:	e1 f7       	brne	.-8      	; 0xd0 <delay_ms+0x8>
  d8:	4f 5f       	subi	r20, 0xFF	; 255
  da:	5f 4f       	sbci	r21, 0xFF	; 255
  dc:	48 17       	cp	r20, r24
  de:	59 07       	cpc	r21, r25
  e0:	29 f4       	brne	.+10     	; 0xec <delay_ms+0x24>
  e2:	08 95       	ret
  e4:	40 e0       	ldi	r20, 0x00	; 0
  e6:	50 e0       	ldi	r21, 0x00	; 0
  e8:	77 e0       	ldi	r23, 0x07	; 7
  ea:	63 e0       	ldi	r22, 0x03	; 3
  ec:	27 2f       	mov	r18, r23
  ee:	36 2f       	mov	r19, r22
  f0:	ef cf       	rjmp	.-34     	; 0xd0 <delay_ms+0x8>

000000f2 <LCD_WriteCommand>:
  f2:	5e 98       	cbi	0x0b, 6	; 11
  f4:	88 b9       	out	0x08, r24	; 8
  f6:	5f 9a       	sbi	0x0b, 7	; 11
  f8:	00 00       	nop
  fa:	5f 98       	cbi	0x0b, 7	; 11
  fc:	82 e0       	ldi	r24, 0x02	; 2
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	e3 cf       	rjmp	.-58     	; 0xc8 <delay_ms>
 102:	08 95       	ret

00000104 <LCD_Cursor>:
 104:	81 31       	cpi	r24, 0x11	; 17
 106:	18 f4       	brcc	.+6      	; 0x10e <LCD_Cursor+0xa>
 108:	81 58       	subi	r24, 0x81	; 129
 10a:	f3 cf       	rjmp	.-26     	; 0xf2 <LCD_WriteCommand>
 10c:	08 95       	ret
 10e:	81 55       	subi	r24, 0x51	; 81
 110:	f0 cf       	rjmp	.-32     	; 0xf2 <LCD_WriteCommand>
 112:	08 95       	ret

00000114 <LCD_init>:
 114:	84 e6       	ldi	r24, 0x64	; 100
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	d7 df       	rcall	.-82     	; 0xc8 <delay_ms>
 11a:	88 e3       	ldi	r24, 0x38	; 56
 11c:	ea df       	rcall	.-44     	; 0xf2 <LCD_WriteCommand>
 11e:	86 e0       	ldi	r24, 0x06	; 6
 120:	e8 df       	rcall	.-48     	; 0xf2 <LCD_WriteCommand>
 122:	8f e0       	ldi	r24, 0x0F	; 15
 124:	e6 df       	rcall	.-52     	; 0xf2 <LCD_WriteCommand>
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	e4 df       	rcall	.-56     	; 0xf2 <LCD_WriteCommand>
 12a:	8a e0       	ldi	r24, 0x0A	; 10
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	cc cf       	rjmp	.-104    	; 0xc8 <delay_ms>
 130:	08 95       	ret

00000132 <LCD_WriteData>:
 132:	5e 9a       	sbi	0x0b, 6	; 11
 134:	88 b9       	out	0x08, r24	; 8
 136:	5f 9a       	sbi	0x0b, 7	; 11
 138:	00 00       	nop
 13a:	5f 98       	cbi	0x0b, 7	; 11
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	c3 cf       	rjmp	.-122    	; 0xc8 <delay_ms>
 142:	08 95       	ret

00000144 <LCD_DisplayString>:
 144:	1f 93       	push	r17
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
 14a:	fb 01       	movw	r30, r22
 14c:	90 81       	ld	r25, Z
 14e:	99 23       	and	r25, r25
 150:	51 f0       	breq	.+20     	; 0x166 <LCD_DisplayString+0x22>
 152:	eb 01       	movw	r28, r22
 154:	11 e0       	ldi	r17, 0x01	; 1
 156:	18 0f       	add	r17, r24
 158:	d5 df       	rcall	.-86     	; 0x104 <LCD_Cursor>
 15a:	89 91       	ld	r24, Y+
 15c:	ea df       	rcall	.-44     	; 0x132 <LCD_WriteData>
 15e:	81 2f       	mov	r24, r17
 160:	98 81       	ld	r25, Y
 162:	91 11       	cpse	r25, r1
 164:	f7 cf       	rjmp	.-18     	; 0x154 <LCD_DisplayString+0x10>
 166:	df 91       	pop	r29
 168:	cf 91       	pop	r28
 16a:	1f 91       	pop	r17
 16c:	08 95       	ret

0000016e <TimerOn>:
 16e:	8b e0       	ldi	r24, 0x0B	; 11
 170:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 174:	8d e7       	ldi	r24, 0x7D	; 125
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 17c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 180:	82 e0       	ldi	r24, 0x02	; 2
 182:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 186:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 18a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 18e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 192:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 196:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 19a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 19e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 1a2:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 1a6:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 1aa:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 1ae:	8f b7       	in	r24, 0x3f	; 63
 1b0:	80 68       	ori	r24, 0x80	; 128
 1b2:	8f bf       	out	0x3f, r24	; 63
 1b4:	08 95       	ret

000001b6 <__vector_13>:
 1b6:	1f 92       	push	r1
 1b8:	0f 92       	push	r0
 1ba:	0f b6       	in	r0, 0x3f	; 63
 1bc:	0f 92       	push	r0
 1be:	11 24       	eor	r1, r1
 1c0:	8f 93       	push	r24
 1c2:	9f 93       	push	r25
 1c4:	af 93       	push	r26
 1c6:	bf 93       	push	r27
 1c8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 1cc:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 1d0:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end+0x2>
 1d4:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x3>
 1d8:	01 97       	sbiw	r24, 0x01	; 1
 1da:	a1 09       	sbc	r26, r1
 1dc:	b1 09       	sbc	r27, r1
 1de:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 1e2:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 1e6:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 1ea:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 1ee:	89 2b       	or	r24, r25
 1f0:	8a 2b       	or	r24, r26
 1f2:	8b 2b       	or	r24, r27
 1f4:	99 f4       	brne	.+38     	; 0x21c <__vector_13+0x66>
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <TimerFlag>
 1fc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 200:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 204:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 208:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 20c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 210:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 214:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 218:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 21c:	bf 91       	pop	r27
 21e:	af 91       	pop	r26
 220:	9f 91       	pop	r25
 222:	8f 91       	pop	r24
 224:	0f 90       	pop	r0
 226:	0f be       	out	0x3f, r0	; 63
 228:	0f 90       	pop	r0
 22a:	1f 90       	pop	r1
 22c:	18 95       	reti

0000022e <InitADC>:
 22e:	ec e7       	ldi	r30, 0x7C	; 124
 230:	f0 e0       	ldi	r31, 0x00	; 0
 232:	80 81       	ld	r24, Z
 234:	80 64       	ori	r24, 0x40	; 64
 236:	80 83       	st	Z, r24
 238:	ea e7       	ldi	r30, 0x7A	; 122
 23a:	f0 e0       	ldi	r31, 0x00	; 0
 23c:	80 81       	ld	r24, Z
 23e:	87 68       	ori	r24, 0x87	; 135
 240:	80 83       	st	Z, r24
 242:	08 95       	ret

00000244 <readadc>:
 244:	ec e7       	ldi	r30, 0x7C	; 124
 246:	f0 e0       	ldi	r31, 0x00	; 0
 248:	90 81       	ld	r25, Z
 24a:	87 70       	andi	r24, 0x07	; 7
 24c:	98 7f       	andi	r25, 0xF8	; 248
 24e:	89 2b       	or	r24, r25
 250:	80 83       	st	Z, r24
 252:	ea e7       	ldi	r30, 0x7A	; 122
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	80 64       	ori	r24, 0x40	; 64
 25a:	80 83       	st	Z, r24
 25c:	80 81       	ld	r24, Z
 25e:	86 fd       	sbrc	r24, 6
 260:	fd cf       	rjmp	.-6      	; 0x25c <readadc+0x18>
 262:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 266:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 26a:	08 95       	ret

0000026c <DisplayAxis>:
 26c:	0f 93       	push	r16
 26e:	1f 93       	push	r17
 270:	cf 93       	push	r28
 272:	df 93       	push	r29
 274:	cd b7       	in	r28, 0x3d	; 61
 276:	de b7       	in	r29, 0x3e	; 62
 278:	a8 97       	sbiw	r28, 0x28	; 40
 27a:	0f b6       	in	r0, 0x3f	; 63
 27c:	f8 94       	cli
 27e:	de bf       	out	0x3e, r29	; 62
 280:	0f be       	out	0x3f, r0	; 63
 282:	cd bf       	out	0x3d, r28	; 61
 284:	8b 01       	movw	r16, r22
 286:	4a e0       	ldi	r20, 0x0A	; 10
 288:	50 e0       	ldi	r21, 0x00	; 0
 28a:	be 01       	movw	r22, r28
 28c:	6f 5f       	subi	r22, 0xFF	; 255
 28e:	7f 4f       	sbci	r23, 0xFF	; 255
 290:	5c d0       	rcall	.+184    	; 0x34a <itoa>
 292:	bc 01       	movw	r22, r24
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	56 df       	rcall	.-340    	; 0x144 <LCD_DisplayString>
 298:	4a e0       	ldi	r20, 0x0A	; 10
 29a:	50 e0       	ldi	r21, 0x00	; 0
 29c:	be 01       	movw	r22, r28
 29e:	6b 5e       	subi	r22, 0xEB	; 235
 2a0:	7f 4f       	sbci	r23, 0xFF	; 255
 2a2:	c8 01       	movw	r24, r16
 2a4:	52 d0       	rcall	.+164    	; 0x34a <itoa>
 2a6:	bc 01       	movw	r22, r24
 2a8:	81 e1       	ldi	r24, 0x11	; 17
 2aa:	4c df       	rcall	.-360    	; 0x144 <LCD_DisplayString>
 2ac:	a8 96       	adiw	r28, 0x28	; 40
 2ae:	0f b6       	in	r0, 0x3f	; 63
 2b0:	f8 94       	cli
 2b2:	de bf       	out	0x3e, r29	; 62
 2b4:	0f be       	out	0x3f, r0	; 63
 2b6:	cd bf       	out	0x3d, r28	; 61
 2b8:	df 91       	pop	r29
 2ba:	cf 91       	pop	r28
 2bc:	1f 91       	pop	r17
 2be:	0f 91       	pop	r16
 2c0:	08 95       	ret

000002c2 <main>:
	
}
int main(void)
{
	DDRA = 0x00; PORTA = 0xFF;
 2c2:	11 b8       	out	0x01, r1	; 1
 2c4:	8f ef       	ldi	r24, 0xFF	; 255
 2c6:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00;
 2c8:	84 b9       	out	0x04, r24	; 4
 2ca:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00; // LCD data lines
 2cc:	87 b9       	out	0x07, r24	; 7
 2ce:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00; // LCD control lines
 2d0:	8a b9       	out	0x0a, r24	; 10
 2d2:	1b b8       	out	0x0b, r1	; 11

	TimerOn();
 2d4:	4c df       	rcall	.-360    	; 0x16e <TimerOn>
unsigned long _avr_timer_M = 1; // Start count from here, down to 0. Default 1ms
unsigned long _avr_timer_cntcurr = 0; // Current internal count of 1ms ticks

// Set TimerISR() to tick every M ms
void TimerSet(unsigned long M) {
	_avr_timer_M = M;
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	a0 e0       	ldi	r26, 0x00	; 0
 2dc:	b0 e0       	ldi	r27, 0x00	; 0
 2de:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 2e2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 2e6:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 2ea:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
	_avr_timer_cntcurr = _avr_timer_M;
 2ee:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 2f2:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 2f6:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 2fa:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
	TimerSet(1);
	uint16_t x,y;
	InitADC();
 2fe:	97 df       	rcall	.-210    	; 0x22e <InitADC>
	LCD_init();
 300:	09 df       	rcall	.-494    	; 0x114 <LCD_init>
	signed short min = -100;
	signed short max = 100;
	
	while(1)
	{
		LCD_Cursor(1);
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	ff de       	rcall	.-514    	; 0x104 <LCD_Cursor>
		x=readadc(0);      //READ ADC VALUE FROM PA.0
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	9d df       	rcall	.-198    	; 0x244 <readadc>
 30a:	8c 01       	movw	r16, r24
		y=readadc(1);      //READ ADC VALUE FROM PA.1
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	9a df       	rcall	.-204    	; 0x244 <readadc>
		x=x-512;
		y=y-512;
 310:	ec 01       	movw	r28, r24
 312:	d2 50       	subi	r29, 0x02	; 2
		DisplayAxis(x, y);
 314:	be 01       	movw	r22, r28
 316:	c8 01       	movw	r24, r16
 318:	92 50       	subi	r25, 0x02	; 2
 31a:	a8 df       	rcall	.-176    	; 0x26c <DisplayAxis>
		if(y >= min && y <= max)
		{
			PORTB = 0x00;
		}
		else if (y < min)
 31c:	cc 39       	cpi	r28, 0x9C	; 156
 31e:	8f ef       	ldi	r24, 0xFF	; 255
 320:	d8 07       	cpc	r29, r24
 322:	20 f4       	brcc	.+8      	; 0x32c <main+0x6a>
		{
			PORTB = 0x01;
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	85 b9       	out	0x05, r24	; 5
			PORTD = 0x00;
 328:	1b b8       	out	0x0b, r1	; 11
 32a:	08 c0       	rjmp	.+16     	; 0x33c <main+0x7a>
		}
		else if (y > max)
 32c:	c5 36       	cpi	r28, 0x65	; 101
 32e:	d1 05       	cpc	r29, r1
 330:	20 f0       	brcs	.+8      	; 0x33a <main+0x78>
		{
			PORTB = 0x00;
 332:	15 b8       	out	0x05, r1	; 5
			PORTD = 0x01;
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	8b b9       	out	0x0b, r24	; 11
 338:	01 c0       	rjmp	.+2      	; 0x33c <main+0x7a>
		}
		else
		{
			PORTB = 0x00;
 33a:	15 b8       	out	0x05, r1	; 5
		}
		
		while (!TimerFlag);	// Wait 1 sec
 33c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <TimerFlag>
 340:	88 23       	and	r24, r24
 342:	e1 f3       	breq	.-8      	; 0x33c <main+0x7a>
		TimerFlag = 0;
 344:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <TimerFlag>
		
	}
 348:	dc cf       	rjmp	.-72     	; 0x302 <main+0x40>

0000034a <itoa>:
 34a:	45 32       	cpi	r20, 0x25	; 37
 34c:	51 05       	cpc	r21, r1
 34e:	18 f4       	brcc	.+6      	; 0x356 <itoa+0xc>
 350:	42 30       	cpi	r20, 0x02	; 2
 352:	08 f0       	brcs	.+2      	; 0x356 <itoa+0xc>
 354:	04 c0       	rjmp	.+8      	; 0x35e <__itoa_ncheck>
 356:	fb 01       	movw	r30, r22
 358:	10 82       	st	Z, r1
 35a:	cb 01       	movw	r24, r22
 35c:	08 95       	ret

0000035e <__itoa_ncheck>:
 35e:	bb 27       	eor	r27, r27
 360:	4a 30       	cpi	r20, 0x0A	; 10
 362:	31 f4       	brne	.+12     	; 0x370 <__itoa_ncheck+0x12>
 364:	99 23       	and	r25, r25
 366:	22 f4       	brpl	.+8      	; 0x370 <__itoa_ncheck+0x12>
 368:	bd e2       	ldi	r27, 0x2D	; 45
 36a:	90 95       	com	r25
 36c:	81 95       	neg	r24
 36e:	9f 4f       	sbci	r25, 0xFF	; 255
 370:	01 c0       	rjmp	.+2      	; 0x374 <__utoa_common>

00000372 <__utoa_ncheck>:
 372:	bb 27       	eor	r27, r27

00000374 <__utoa_common>:
 374:	fb 01       	movw	r30, r22
 376:	55 27       	eor	r21, r21
 378:	aa 27       	eor	r26, r26
 37a:	88 0f       	add	r24, r24
 37c:	99 1f       	adc	r25, r25
 37e:	aa 1f       	adc	r26, r26
 380:	a4 17       	cp	r26, r20
 382:	10 f0       	brcs	.+4      	; 0x388 <__utoa_common+0x14>
 384:	a4 1b       	sub	r26, r20
 386:	83 95       	inc	r24
 388:	50 51       	subi	r21, 0x10	; 16
 38a:	b9 f7       	brne	.-18     	; 0x37a <__utoa_common+0x6>
 38c:	a0 5d       	subi	r26, 0xD0	; 208
 38e:	aa 33       	cpi	r26, 0x3A	; 58
 390:	08 f0       	brcs	.+2      	; 0x394 <__utoa_common+0x20>
 392:	a9 5d       	subi	r26, 0xD9	; 217
 394:	a1 93       	st	Z+, r26
 396:	00 97       	sbiw	r24, 0x00	; 0
 398:	79 f7       	brne	.-34     	; 0x378 <__utoa_common+0x4>
 39a:	b1 11       	cpse	r27, r1
 39c:	b1 93       	st	Z+, r27
 39e:	11 92       	st	Z+, r1
 3a0:	cb 01       	movw	r24, r22
 3a2:	00 c0       	rjmp	.+0      	; 0x3a4 <strrev>

000003a4 <strrev>:
 3a4:	dc 01       	movw	r26, r24
 3a6:	fc 01       	movw	r30, r24
 3a8:	67 2f       	mov	r22, r23
 3aa:	71 91       	ld	r23, Z+
 3ac:	77 23       	and	r23, r23
 3ae:	e1 f7       	brne	.-8      	; 0x3a8 <strrev+0x4>
 3b0:	32 97       	sbiw	r30, 0x02	; 2
 3b2:	04 c0       	rjmp	.+8      	; 0x3bc <strrev+0x18>
 3b4:	7c 91       	ld	r23, X
 3b6:	6d 93       	st	X+, r22
 3b8:	70 83       	st	Z, r23
 3ba:	62 91       	ld	r22, -Z
 3bc:	ae 17       	cp	r26, r30
 3be:	bf 07       	cpc	r27, r31
 3c0:	c8 f3       	brcs	.-14     	; 0x3b4 <strrev+0x10>
 3c2:	08 95       	ret

000003c4 <_exit>:
 3c4:	f8 94       	cli

000003c6 <__stop_program>:
 3c6:	ff cf       	rjmp	.-2      	; 0x3c6 <__stop_program>
